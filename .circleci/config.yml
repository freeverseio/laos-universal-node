version: 2.1

orbs:
  kube-orb: circleci/kubernetes@1.3.1
  helm: circleci/helm@3.0.0

commands:
  build_and_push:
    description: Build and push Docker image
    parameters:
      image:
        type: string
      root:
        type: string
    steps:
      - run:
          name: Build and push Docker image
          command: |
            ./scripts/dockerize-and-push.sh freeverseio/<< parameters.image >> << parameters.root >>
  install_helmfile:
    description: Install helmfile
    steps:
      - run:
          name: Install helmfile
          command: ./scripts/install-helmfile.sh

jobs:
  go_test:
    docker:
      - image: cimg/go:1.21
    steps:
      - checkout
      - run:
          name: Run go tests
          command: |
            cd go && go test -race ./...
  dockerize:
    docker:
      - image: cimg/base:2023.09
    parameters:
      image:
        type: string
      root:
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - build_and_push:
          image: << parameters.image >>
          root: << parameters.root >>
  lint:
    docker:
      - image: golangci/golangci-lint:v1.54.2
    steps:
      - checkout
      - run:
          name: Run golangci-lint
          command: |
            cd go && golangci-lint run
  deployment_lint:
    docker:
      - image: cimg/base:2023.09
    steps:
      - checkout
          - helm/install-helm-client:
              version: v3.8.2
          - install_helmfile
          - run:
              name: Lint Helm charts for development environment
              command: |
                cd deployment/
                TAG=$CIRCLE_SHA1 helmfile lint
      deploy_to_development:
        docker:
          - image: cimg/deploy:2023.09
        steps:
          - checkout
          - kube-orb/install-kubectl:
              kubectl-version: "v1.16.12"
          - kube-orb/install-kubeconfig:
              kubeconfig: KUBECONFIG_DEV_DATA
          - helm/install-helm-client:
              version: v3.8.2
      - install_helmfile
      - run:
          name: Deploy to development environment
          command: |
            cd deployment/
            TAG=$CIRCLE_SHA1 helmfile sync

workflows:
  build_and_test:
    jobs:
      - lint
      - deployment_test:
          context: dockerhub
          filters:
            tags:
              only: /.*/
      - go_test:
          context: dockerhub
          filters:
            tags:
              only: /.*/
      - dockerize:
          name: dockerize_universalnode
          context: dockerhub
          image: laos-universal-node
          root: .
          filters:
            tags:
              only: /.*/
      - deploy_to_development:
          filters:
              branches:
                only:
                  - main
          requires:
            - lint
            - go_test
            - deployment_test
            - dockerize
