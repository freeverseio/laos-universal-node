// Code generated by MockGen. DO NOT EDIT.
// Source: internal/core/processor/shared.go
//
// Generated by this command:
//
//	mockgen -source=internal/core/processor/shared.go -destination=internal/core/processor/mock/shared.go -package=mock
//
// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockBlockHelper is a mock of BlockHelper interface.
type MockBlockHelper struct {
	ctrl     *gomock.Controller
	recorder *MockBlockHelperMockRecorder
}

// MockBlockHelperMockRecorder is the mock recorder for MockBlockHelper.
type MockBlockHelperMockRecorder struct {
	mock *MockBlockHelper
}

// NewMockBlockHelper creates a new mock instance.
func NewMockBlockHelper(ctrl *gomock.Controller) *MockBlockHelper {
	mock := &MockBlockHelper{ctrl: ctrl}
	mock.recorder = &MockBlockHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlockHelper) EXPECT() *MockBlockHelperMockRecorder {
	return m.recorder
}

// GetEvoInitStartingBlock mocks base method.
func (m *MockBlockHelper) GetEvoInitStartingBlock(ctx context.Context) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEvoInitStartingBlock", ctx)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEvoInitStartingBlock indicates an expected call of GetEvoInitStartingBlock.
func (mr *MockBlockHelperMockRecorder) GetEvoInitStartingBlock(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEvoInitStartingBlock", reflect.TypeOf((*MockBlockHelper)(nil).GetEvoInitStartingBlock), ctx)
}

// GetLastBlock mocks base method.
func (m *MockBlockHelper) GetLastBlock(ctx context.Context, startingBlock uint64) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLastBlock", ctx, startingBlock)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLastBlock indicates an expected call of GetLastBlock.
func (mr *MockBlockHelperMockRecorder) GetLastBlock(ctx, startingBlock any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLastBlock", reflect.TypeOf((*MockBlockHelper)(nil).GetLastBlock), ctx, startingBlock)
}

// GetOwnershipInitStartingBlock mocks base method.
func (m *MockBlockHelper) GetOwnershipInitStartingBlock(ctx context.Context) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOwnershipInitStartingBlock", ctx)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOwnershipInitStartingBlock indicates an expected call of GetOwnershipInitStartingBlock.
func (mr *MockBlockHelperMockRecorder) GetOwnershipInitStartingBlock(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOwnershipInitStartingBlock", reflect.TypeOf((*MockBlockHelper)(nil).GetOwnershipInitStartingBlock), ctx)
}
